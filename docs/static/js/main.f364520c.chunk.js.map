{"version":3,"sources":["commponents/AddCategory.js","helpers/getGifts.js","hooks/useFetchGifs.js","commponents/GifGridItem.js","commponents/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yMAkCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAgBvC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,QAAU,IAC7BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAQD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,IAClCP,KAAMe,EAAIf,SAZC,kBAgBZa,GAhBY,4CAAH,sDCwBLO,EArBM,SAAEf,GAAe,IAAD,EACPd,mBAAS,CAC/BqB,KAAM,GACNS,SAAS,IAHoB,mBAC1BC,EAD0B,KACnBC,EADmB,KAkBjC,OAZAC,qBAAW,WAEPpB,EAASC,GACJoB,MAAK,SAAAC,GACFH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAItB,CAAEhB,IAEEiB,GCTIK,EAVK,SAAC,GAAoB,IAAlBV,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE1B,OACI,sBAAKqB,UAAU,gDAAf,UACI,qBAAKC,IAAMtB,EAAMuB,IAAMb,IACvB,4BAAKA,QCqBFc,EAxBC,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAAe,EACCe,EAAaf,GAAhCa,EADkB,EACvBN,KAAaS,EADU,EACVA,QAEpB,OACI,qCACI,oBAAIO,UAAU,oCAAd,SAAoDvB,IAElDgB,GAAW,mBAAGO,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGQV,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAESA,GADCA,EAAIC,aCgBvBgB,EA9BM,WAAO,IAAD,EACazC,mBAAS,CAAC,cADvB,mBAChB0C,EADgB,KACJ3C,EADI,KAQvB,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CACIA,SAAUA,GACLA,Y,MCnBjC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f364520c.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length >= 2 ) {\n            setCategories( cats => [inputValue, ...cats] );\n            setInputValue('');\n        }\n    } \n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }           \n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","export const getGifs = async (category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=ee0Ui6HwhIMZyggrD0G3bpdZRXRaFd3f`;\n\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifts = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url,\n            type: img.type\n        }\n    });\n\n    return gifts;\n}","import { useEffect, useState } from \"react\";\nimport { getGifs } from '../helpers/getGifts'\n\nconst useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            });\n        \n    }, [ category ]);\n\n    return state; // {data:[], loading: true}\n}\n\nexport default useFetchGifs;\n","import React from 'react'\n\nconst GifGridItem = ({ title, url }) => {\n    \n    return (\n        <div className=\"card animate__animated animate__bounceInRight\">\n            <img src={ url } alt={ title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n\nexport default GifGridItem\n","import React from 'react'\nimport useFetchGifs from '../hooks/useFetchGifs'\nimport GifGridItem from './GifGridItem';\n\nconst GifGrid = ({ category }) => {\n    const {data:images, loading} = useFetchGifs(category);\n    \n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n\n            <div className=\"card-grid\">\n                \n                {\n                    images.map( (img) => (\n                        <GifGridItem \n                            key={ img.id } \n                            { ...img } \n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid\n","import React, {useState} from 'react';\nimport AddCategory from './commponents/AddCategory';\nimport GifGrid from './commponents/GifGrid';\n\nconst GifExpertApp = () => {\n    const [categories, setCategories] = useState(['One Punch']);\n    \n    /*const handleAdd = () => {\n        // setCategories([...categories, 'One Piece']);\n        setCategories( cats => [...cats, 'Naruto']);\n    }*/\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n\n            <AddCategory setCategories={ setCategories } />\n            \n            <hr />\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid \n                            category={category} \n                            key={category}\n                        />\n                    ))\n                }\n            </ol>\n        </>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n//rafce snnpipe para crear componentes\n\n"],"sourceRoot":""}